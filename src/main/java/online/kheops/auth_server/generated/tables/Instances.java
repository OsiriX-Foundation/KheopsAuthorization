/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import online.kheops.auth_server.generated.Indexes;
import online.kheops.auth_server.generated.Keys;
import online.kheops.auth_server.generated.Public;
import online.kheops.auth_server.generated.tables.records.InstancesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Instances extends TableImpl<InstancesRecord> {

    private static final long serialVersionUID = 1738643404;

    /**
     * The reference instance of <code>public.instances</code>
     */
    public static final Instances INSTANCES = new Instances();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstancesRecord> getRecordType() {
        return InstancesRecord.class;
    }

    /**
     * The column <code>public.instances.pk</code>.
     */
    public final TableField<InstancesRecord, Long> PK = createField("pk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.instances.series_fk</code>.
     */
    public final TableField<InstancesRecord, Long> SERIES_FK = createField("series_fk", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.instances.creation_time</code>.
     */
    public final TableField<InstancesRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.instances.instance_uid</code>.
     */
    public final TableField<InstancesRecord, String> INSTANCE_UID = createField("instance_uid", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>public.instances</code> table reference
     */
    public Instances() {
        this(DSL.name("instances"), null);
    }

    /**
     * Create an aliased <code>public.instances</code> table reference
     */
    public Instances(String alias) {
        this(DSL.name(alias), INSTANCES);
    }

    /**
     * Create an aliased <code>public.instances</code> table reference
     */
    public Instances(Name alias) {
        this(alias, INSTANCES);
    }

    private Instances(Name alias, Table<InstancesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Instances(Name alias, Table<InstancesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Instances(Table<O> child, ForeignKey<O, InstancesRecord> key) {
        super(child, key, INSTANCES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INSTANCE_UID_INDEX, Indexes.INSTANCES_PK, Indexes.SERIES_FK_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstancesRecord> getPrimaryKey() {
        return Keys.INSTANCES_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstancesRecord>> getKeys() {
        return Arrays.<UniqueKey<InstancesRecord>>asList(Keys.INSTANCES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InstancesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InstancesRecord, ?>>asList(Keys.INSTANCES__INSTANCES_SERIES_FK_FKEY);
    }

    public Series series() {
        return new Series(this, Keys.INSTANCES__INSTANCES_SERIES_FK_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instances as(String alias) {
        return new Instances(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instances as(Name alias) {
        return new Instances(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Instances rename(String name) {
        return new Instances(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Instances rename(Name name) {
        return new Instances(name, null);
    }
}
