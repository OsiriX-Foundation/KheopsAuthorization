/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import online.kheops.auth_server.generated.Indexes;
import online.kheops.auth_server.generated.Keys;
import online.kheops.auth_server.generated.Public;
import online.kheops.auth_server.generated.tables.records.CapabilitiesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Capabilities extends TableImpl<CapabilitiesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.capabilities</code>
     */
    public static final Capabilities CAPABILITIES = new Capabilities();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CapabilitiesRecord> getRecordType() {
        return CapabilitiesRecord.class;
    }

    /**
     * The column <code>public.capabilities.pk</code>.
     */
    public final TableField<CapabilitiesRecord, Long> PK = createField(DSL.name("pk"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.capabilities.id</code>.
     */
    public final TableField<CapabilitiesRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.capabilities.issued_at_time</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> ISSUED_AT_TIME = createField(DSL.name("issued_at_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.capabilities.updated_time</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("updated_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.capabilities.expiration_time</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> EXPIRATION_TIME = createField(DSL.name("expiration_time"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.capabilities.not_before_time</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> NOT_BEFORE_TIME = createField(DSL.name("not_before_time"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.capabilities.last_used</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> LAST_USED = createField(DSL.name("last_used"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.capabilities.revoked_time</code>.
     */
    public final TableField<CapabilitiesRecord, LocalDateTime> REVOKED_TIME = createField(DSL.name("revoked_time"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.capabilities.title</code>.
     */
    public final TableField<CapabilitiesRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.capabilities.secret</code>.
     */
    public final TableField<CapabilitiesRecord, String> SECRET = createField(DSL.name("secret"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.capabilities.read_permission</code>.
     */
    public final TableField<CapabilitiesRecord, Boolean> READ_PERMISSION = createField(DSL.name("read_permission"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.capabilities.appropriate_permission</code>.
     */
    public final TableField<CapabilitiesRecord, Boolean> APPROPRIATE_PERMISSION = createField(DSL.name("appropriate_permission"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.capabilities.download_permission</code>.
     */
    public final TableField<CapabilitiesRecord, Boolean> DOWNLOAD_PERMISSION = createField(DSL.name("download_permission"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.capabilities.write_permission</code>.
     */
    public final TableField<CapabilitiesRecord, Boolean> WRITE_PERMISSION = createField(DSL.name("write_permission"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.capabilities.user_fk</code>.
     */
    public final TableField<CapabilitiesRecord, Long> USER_FK = createField(DSL.name("user_fk"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.capabilities.scope_type</code>.
     */
    public final TableField<CapabilitiesRecord, String> SCOPE_TYPE = createField(DSL.name("scope_type"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.capabilities.album_fk</code>.
     */
    public final TableField<CapabilitiesRecord, Long> ALBUM_FK = createField(DSL.name("album_fk"), SQLDataType.BIGINT, this, "");

    private Capabilities(Name alias, Table<CapabilitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Capabilities(Name alias, Table<CapabilitiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.capabilities</code> table reference
     */
    public Capabilities(String alias) {
        this(DSL.name(alias), CAPABILITIES);
    }

    /**
     * Create an aliased <code>public.capabilities</code> table reference
     */
    public Capabilities(Name alias) {
        this(alias, CAPABILITIES);
    }

    /**
     * Create a <code>public.capabilities</code> table reference
     */
    public Capabilities() {
        this(DSL.name("capabilities"), null);
    }

    public <O extends Record> Capabilities(Table<O> child, ForeignKey<O, CapabilitiesRecord> key) {
        super(child, key, CAPABILITIES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CAPABILITIES_ALBUM_FK_INDEX, Indexes.CAPABILITIES_USER_FK_INDEX);
    }

    @Override
    public Identity<CapabilitiesRecord, Long> getIdentity() {
        return (Identity<CapabilitiesRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CapabilitiesRecord> getPrimaryKey() {
        return Keys.CAPABILITIES_PK;
    }

    @Override
    public List<UniqueKey<CapabilitiesRecord>> getKeys() {
        return Arrays.<UniqueKey<CapabilitiesRecord>>asList(Keys.CAPABILITIES_PK, Keys.CAPABILITIES_ID_UNIQUE, Keys.CAPABILITIES_SECRET_UNIQUE);
    }

    @Override
    public List<ForeignKey<CapabilitiesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CapabilitiesRecord, ?>>asList(Keys.CAPABILITIES__CAPABILITIES_USER_FK_FKEY, Keys.CAPABILITIES__CAPABILITIES_ALBUM_FK_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.CAPABILITIES__CAPABILITIES_USER_FK_FKEY);
    }

    public Albums albums() {
        return new Albums(this, Keys.CAPABILITIES__CAPABILITIES_ALBUM_FK_FKEY);
    }

    @Override
    public Capabilities as(String alias) {
        return new Capabilities(DSL.name(alias), this);
    }

    @Override
    public Capabilities as(Name alias) {
        return new Capabilities(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Capabilities rename(String name) {
        return new Capabilities(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Capabilities rename(Name name) {
        return new Capabilities(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Boolean, Boolean, Boolean, Boolean, Long, String, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
