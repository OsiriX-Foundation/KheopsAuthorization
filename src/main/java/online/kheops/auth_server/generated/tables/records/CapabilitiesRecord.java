/*
 * This file is generated by jOOQ.
 */
package online.kheops.auth_server.generated.tables.records;


import java.time.LocalDateTime;

import online.kheops.auth_server.generated.tables.Capabilities;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CapabilitiesRecord extends UpdatableRecordImpl<CapabilitiesRecord> implements Record17<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Boolean, Boolean, Boolean, Boolean, Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.capabilities.pk</code>.
     */
    public void setPk(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.capabilities.pk</code>.
     */
    public Long getPk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.capabilities.id</code>.
     */
    public void setId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.capabilities.id</code>.
     */
    public String getId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.capabilities.issued_at_time</code>.
     */
    public void setIssuedAtTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.capabilities.issued_at_time</code>.
     */
    public LocalDateTime getIssuedAtTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.capabilities.updated_time</code>.
     */
    public void setUpdatedTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.capabilities.updated_time</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.capabilities.expiration_time</code>.
     */
    public void setExpirationTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.capabilities.expiration_time</code>.
     */
    public LocalDateTime getExpirationTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.capabilities.not_before_time</code>.
     */
    public void setNotBeforeTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.capabilities.not_before_time</code>.
     */
    public LocalDateTime getNotBeforeTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.capabilities.last_used</code>.
     */
    public void setLastUsed(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.capabilities.last_used</code>.
     */
    public LocalDateTime getLastUsed() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.capabilities.revoked_time</code>.
     */
    public void setRevokedTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.capabilities.revoked_time</code>.
     */
    public LocalDateTime getRevokedTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.capabilities.title</code>.
     */
    public void setTitle(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.capabilities.title</code>.
     */
    public String getTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.capabilities.secret</code>.
     */
    public void setSecret(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.capabilities.secret</code>.
     */
    public String getSecret() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.capabilities.read_permission</code>.
     */
    public void setReadPermission(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.capabilities.read_permission</code>.
     */
    public Boolean getReadPermission() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>public.capabilities.appropriate_permission</code>.
     */
    public void setAppropriatePermission(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.capabilities.appropriate_permission</code>.
     */
    public Boolean getAppropriatePermission() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>public.capabilities.download_permission</code>.
     */
    public void setDownloadPermission(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.capabilities.download_permission</code>.
     */
    public Boolean getDownloadPermission() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.capabilities.write_permission</code>.
     */
    public void setWritePermission(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.capabilities.write_permission</code>.
     */
    public Boolean getWritePermission() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>public.capabilities.user_fk</code>.
     */
    public void setUserFk(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.capabilities.user_fk</code>.
     */
    public Long getUserFk() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>public.capabilities.scope_type</code>.
     */
    public void setScopeType(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.capabilities.scope_type</code>.
     */
    public String getScopeType() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.capabilities.album_fk</code>.
     */
    public void setAlbumFk(Long value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.capabilities.album_fk</code>.
     */
    public Long getAlbumFk() {
        return (Long) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Boolean, Boolean, Boolean, Boolean, Long, String, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Boolean, Boolean, Boolean, Boolean, Long, String, Long> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Capabilities.CAPABILITIES.PK;
    }

    @Override
    public Field<String> field2() {
        return Capabilities.CAPABILITIES.ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Capabilities.CAPABILITIES.ISSUED_AT_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Capabilities.CAPABILITIES.UPDATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Capabilities.CAPABILITIES.EXPIRATION_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Capabilities.CAPABILITIES.NOT_BEFORE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Capabilities.CAPABILITIES.LAST_USED;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Capabilities.CAPABILITIES.REVOKED_TIME;
    }

    @Override
    public Field<String> field9() {
        return Capabilities.CAPABILITIES.TITLE;
    }

    @Override
    public Field<String> field10() {
        return Capabilities.CAPABILITIES.SECRET;
    }

    @Override
    public Field<Boolean> field11() {
        return Capabilities.CAPABILITIES.READ_PERMISSION;
    }

    @Override
    public Field<Boolean> field12() {
        return Capabilities.CAPABILITIES.APPROPRIATE_PERMISSION;
    }

    @Override
    public Field<Boolean> field13() {
        return Capabilities.CAPABILITIES.DOWNLOAD_PERMISSION;
    }

    @Override
    public Field<Boolean> field14() {
        return Capabilities.CAPABILITIES.WRITE_PERMISSION;
    }

    @Override
    public Field<Long> field15() {
        return Capabilities.CAPABILITIES.USER_FK;
    }

    @Override
    public Field<String> field16() {
        return Capabilities.CAPABILITIES.SCOPE_TYPE;
    }

    @Override
    public Field<Long> field17() {
        return Capabilities.CAPABILITIES.ALBUM_FK;
    }

    @Override
    public Long component1() {
        return getPk();
    }

    @Override
    public String component2() {
        return getId();
    }

    @Override
    public LocalDateTime component3() {
        return getIssuedAtTime();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime component5() {
        return getExpirationTime();
    }

    @Override
    public LocalDateTime component6() {
        return getNotBeforeTime();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUsed();
    }

    @Override
    public LocalDateTime component8() {
        return getRevokedTime();
    }

    @Override
    public String component9() {
        return getTitle();
    }

    @Override
    public String component10() {
        return getSecret();
    }

    @Override
    public Boolean component11() {
        return getReadPermission();
    }

    @Override
    public Boolean component12() {
        return getAppropriatePermission();
    }

    @Override
    public Boolean component13() {
        return getDownloadPermission();
    }

    @Override
    public Boolean component14() {
        return getWritePermission();
    }

    @Override
    public Long component15() {
        return getUserFk();
    }

    @Override
    public String component16() {
        return getScopeType();
    }

    @Override
    public Long component17() {
        return getAlbumFk();
    }

    @Override
    public Long value1() {
        return getPk();
    }

    @Override
    public String value2() {
        return getId();
    }

    @Override
    public LocalDateTime value3() {
        return getIssuedAtTime();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime value5() {
        return getExpirationTime();
    }

    @Override
    public LocalDateTime value6() {
        return getNotBeforeTime();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUsed();
    }

    @Override
    public LocalDateTime value8() {
        return getRevokedTime();
    }

    @Override
    public String value9() {
        return getTitle();
    }

    @Override
    public String value10() {
        return getSecret();
    }

    @Override
    public Boolean value11() {
        return getReadPermission();
    }

    @Override
    public Boolean value12() {
        return getAppropriatePermission();
    }

    @Override
    public Boolean value13() {
        return getDownloadPermission();
    }

    @Override
    public Boolean value14() {
        return getWritePermission();
    }

    @Override
    public Long value15() {
        return getUserFk();
    }

    @Override
    public String value16() {
        return getScopeType();
    }

    @Override
    public Long value17() {
        return getAlbumFk();
    }

    @Override
    public CapabilitiesRecord value1(Long value) {
        setPk(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value2(String value) {
        setId(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value3(LocalDateTime value) {
        setIssuedAtTime(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value4(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value5(LocalDateTime value) {
        setExpirationTime(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value6(LocalDateTime value) {
        setNotBeforeTime(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value7(LocalDateTime value) {
        setLastUsed(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value8(LocalDateTime value) {
        setRevokedTime(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value9(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value10(String value) {
        setSecret(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value11(Boolean value) {
        setReadPermission(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value12(Boolean value) {
        setAppropriatePermission(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value13(Boolean value) {
        setDownloadPermission(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value14(Boolean value) {
        setWritePermission(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value15(Long value) {
        setUserFk(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value16(String value) {
        setScopeType(value);
        return this;
    }

    @Override
    public CapabilitiesRecord value17(Long value) {
        setAlbumFk(value);
        return this;
    }

    @Override
    public CapabilitiesRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8, String value9, String value10, Boolean value11, Boolean value12, Boolean value13, Boolean value14, Long value15, String value16, Long value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CapabilitiesRecord
     */
    public CapabilitiesRecord() {
        super(Capabilities.CAPABILITIES);
    }

    /**
     * Create a detached, initialised CapabilitiesRecord
     */
    public CapabilitiesRecord(Long pk, String id, LocalDateTime issuedAtTime, LocalDateTime updatedTime, LocalDateTime expirationTime, LocalDateTime notBeforeTime, LocalDateTime lastUsed, LocalDateTime revokedTime, String title, String secret, Boolean readPermission, Boolean appropriatePermission, Boolean downloadPermission, Boolean writePermission, Long userFk, String scopeType, Long albumFk) {
        super(Capabilities.CAPABILITIES);

        setPk(pk);
        setId(id);
        setIssuedAtTime(issuedAtTime);
        setUpdatedTime(updatedTime);
        setExpirationTime(expirationTime);
        setNotBeforeTime(notBeforeTime);
        setLastUsed(lastUsed);
        setRevokedTime(revokedTime);
        setTitle(title);
        setSecret(secret);
        setReadPermission(readPermission);
        setAppropriatePermission(appropriatePermission);
        setDownloadPermission(downloadPermission);
        setWritePermission(writePermission);
        setUserFk(userFk);
        setScopeType(scopeType);
        setAlbumFk(albumFk);
    }
}
